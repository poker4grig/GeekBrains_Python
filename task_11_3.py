# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
# работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
# очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.
class My_Exception(Exception):

    def __str__(self):
        return f'вводите только числа'


def is_number(inp_num):
    try:
        if type(inp_num) != int:
            raise My_Exception
    except My_Exception as e:
        print(e)
    else:
        return inp_num


valid_lst = []
while True:
    num = input('Введите число. Чтобы закончить введите "stop": ')
    if num.isdigit():
        num = int(num)
    elif num == 'stop':
        print(valid_lst)
        break
    if is_number(num) is not None:
        valid_lst.append(is_number(num))
